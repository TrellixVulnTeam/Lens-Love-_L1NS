{"ast":null,"code":"import { auth } from './../../firebase/utils';\nimport { firestore } from './../../firebase/utils';\nexport const handleResetPasswordAPI = email => {\n  const config = {\n    url: 'http://localhost:3000/login'\n  };\n  return new Promise((resolve, reject) => {\n    auth.sendPasswordResetEmail(email, config).then(() => {\n      resolve();\n    }).catch(() => {\n      const err = ['Email not found. Please try again.'];\n      reject(err);\n    });\n  });\n}; // export const handleFetchAdminOrder=()=>{\n//   return new Promise((resolve,reject)=>{\n//     firestore\n//     .collection('users')\n//     .get()\n//     .then(snapshot=>{\n//       const ordersArray=snapshot.docs.map(doc=>{\n//         return {\n//           ...doc.data(),\n//           documentID:doc.id\n//         }\n//       })\n//       resolve(usersArray)\n//     })\n//     .catch(err=>{\n//       reject(err)\n//     })\n//   })\n// }","map":{"version":3,"sources":["C:/Users/HP/OneDrive/Desktop/taskEcommerce/src/redux/User/user.helpers.js"],"names":["auth","firestore","handleResetPasswordAPI","email","config","url","Promise","resolve","reject","sendPasswordResetEmail","then","catch","err"],"mappings":"AAAA,SAASA,IAAT,QAAqB,wBAArB;AACA,SAAQC,SAAR,QAAwB,wBAAxB;AAEA,OAAO,MAAMC,sBAAsB,GAAIC,KAAD,IAAW;AAC/C,QAAMC,MAAM,GAAG;AACbC,IAAAA,GAAG,EAAE;AADQ,GAAf;AAIA,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCR,IAAAA,IAAI,CAACS,sBAAL,CAA4BN,KAA5B,EAAmCC,MAAnC,EACGM,IADH,CACQ,MAAM;AACVH,MAAAA,OAAO;AACR,KAHH,EAIGI,KAJH,CAIS,MAAM;AACX,YAAMC,GAAG,GAAG,CAAC,oCAAD,CAAZ;AACAJ,MAAAA,MAAM,CAACI,GAAD,CAAN;AACD,KAPH;AAQD,GATM,CAAP;AAUD,CAfM,C,CAkBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { auth } from './../../firebase/utils';\nimport {firestore} from './../../firebase/utils'\n\nexport const handleResetPasswordAPI = (email) => {\n  const config = {\n    url: 'http://localhost:3000/login'\n  };\n\n  return new Promise((resolve, reject) => {\n    auth.sendPasswordResetEmail(email, config)\n      .then(() => {\n        resolve();\n      })\n      .catch(() => {\n        const err = ['Email not found. Please try again.'];\n        reject(err);\n      });\n  });\n};\n\n\n// export const handleFetchAdminOrder=()=>{\n//   return new Promise((resolve,reject)=>{\n//     firestore\n//     .collection('users')\n//     .get()\n//     .then(snapshot=>{\n//       const ordersArray=snapshot.docs.map(doc=>{\n//         return {\n//           ...doc.data(),\n//           documentID:doc.id\n//         }\n//       })\n//       resolve(usersArray)\n\n//     })\n//     .catch(err=>{\n//       reject(err)\n//     })\n//   })\n// }\n\n"]},"metadata":{},"sourceType":"module"}