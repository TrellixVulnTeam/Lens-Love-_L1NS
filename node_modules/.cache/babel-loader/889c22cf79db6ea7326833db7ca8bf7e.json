{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport { firebaseConfig } from './config';\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const GoogleProvider = new firebase.auth.GoogleAuthProvider();\nGoogleProvider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const handleUserProfile = async _ref => {\n  let {\n    userAuth,\n    additionalData\n  } = _ref;\n  if (!userAuth) return; // const { uid } = userAuth;\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapshot = await userRef.get();\n\n  if (!snapshot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const timestamp = new Date();\n    const userRoles = ['user'];\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdDate: timestamp,\n        userRoles,\n        ...additionalData\n      });\n    } catch (err) {// console.log(err);\n    }\n  }\n\n  return userRef;\n};\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = auth.onAuthStateChanged(userAuth => {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject);\n  });\n}; // import firebase from 'firebase/compat/app';\n// import 'firebase/compat/firestore';\n// import 'firebase/compat/auth';\n// const config = {\n//    apiKey: \"AIzaSyA-4HHVuPHukbJ7AsLCCiITyX_zLy0nBcA\",\n//   authDomain: \"foodstore-ffdf9.firebaseapp.com\",\n//   projectId: \"foodstore-ffdf9\",\n//   storageBucket: \"foodstore-ffdf9.appspot.com\",\n//   messagingSenderId: \"44192915194\",\n//   appId: \"1:44192915194:web:d7b01afb68e3faf3387343\",\n//   measurementId: \"G-BC5TF4FGX2\"\n// };\n// export const createUserProfileDocument = async (userAuth, additionalData) => {\n//    if (!userAuth) return;\n//    const userRef = firestore.doc(`users/${userAuth.uid}`);\n//    const snapShot = await userRef.get();\n//    if (!snapShot.exists) {\n//       const { displayName, email } = userAuth;\n//       const createdAt = new Date();\n//       const userRoles = ['user']\n//       try {\n//          await userRef.set({\n//             displayName,\n//             email,\n//             createdAt,\n//             userRoles,\n//             ...additionalData\n//          })\n//       } catch (error) {\n//          console.log('error creating user', error.message);\n//       }\n//    }\n//    return userRef;\n// }\n// firebase.initializeApp(config);\n// export const auth = firebase.auth();\n// export const firestore = firebase.firestore();\n// const provider = new firebase.auth.GoogleAuthProvider();\n// provider.setCustomParameters({ prompt: 'select_account' });\n// export const signInWithGoogle = () => auth.signInWithPopup(provider);\n// export default firebase;","map":{"version":3,"sources":["C:/Users/HP/OneDrive/Desktop/taskEcommerce/src/firebase/utils.js"],"names":["firebase","firebaseConfig","initializeApp","auth","firestore","GoogleProvider","GoogleAuthProvider","setCustomParameters","prompt","handleUserProfile","userAuth","additionalData","userRef","doc","uid","snapshot","get","exists","displayName","email","timestamp","Date","userRoles","set","createdDate","err","getCurrentUser","Promise","resolve","reject","unsubscribe","onAuthStateChanged"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AACA,SAASC,cAAT,QAA+B,UAA/B;AAEAD,QAAQ,CAACE,aAAT,CAAuBD,cAAvB;AAEA,OAAO,MAAME,IAAI,GAAGH,QAAQ,CAACG,IAAT,EAAb;AACP,OAAO,MAAMC,SAAS,GAAGJ,QAAQ,CAACI,SAAT,EAAlB;AAEP,OAAO,MAAMC,cAAc,GAAG,IAAIL,QAAQ,CAACG,IAAT,CAAcG,kBAAlB,EAAvB;AACPD,cAAc,CAACE,mBAAf,CAAmC;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAAnC;AAEA,OAAO,MAAMC,iBAAiB,GAAG,cAAwC;AAAA,MAAjC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAiC;AACvE,MAAI,CAACD,QAAL,EAAe,OADwD,CAEvE;;AAEA,QAAME,OAAO,GAAGR,SAAS,CAACS,GAAV,CAAe,SAAQH,QAAQ,CAACI,GAAI,EAApC,CAAhB;AACA,QAAMC,QAAQ,GAAG,MAAMH,OAAO,CAACI,GAAR,EAAvB;;AAEA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AACpB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBT,QAA/B;AACA,UAAMU,SAAS,GAAG,IAAIC,IAAJ,EAAlB;AACA,UAAMC,SAAS,GAAG,CAAC,MAAD,CAAlB;;AAEA,QAAI;AACF,YAAMV,OAAO,CAACW,GAAR,CAAY;AAChBL,QAAAA,WADgB;AAEhBC,QAAAA,KAFgB;AAGhBK,QAAAA,WAAW,EAAEJ,SAHG;AAIhBE,QAAAA,SAJgB;AAKhB,WAAGX;AALa,OAAZ,CAAN;AAOD,KARD,CAQE,OAAMc,GAAN,EAAW,CACX;AACD;AACF;;AAED,SAAOb,OAAP;AACD,CA1BM;AA4BP,OAAO,MAAMc,cAAc,GAAG,MAAM;AAClC,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,UAAMC,WAAW,GAAG3B,IAAI,CAAC4B,kBAAL,CAAwBrB,QAAQ,IAAI;AACtDoB,MAAAA,WAAW;AACXF,MAAAA,OAAO,CAAClB,QAAD,CAAP;AACD,KAHmB,EAGjBmB,MAHiB,CAApB;AAID,GALM,CAAP;AAMD,CAPM,C,CAWP;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport { firebaseConfig } from './config';\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nexport const GoogleProvider = new firebase.auth.GoogleAuthProvider();\nGoogleProvider.setCustomParameters({ prompt: 'select_account' });\n\nexport const handleUserProfile = async ({ userAuth, additionalData }) => {\n  if (!userAuth) return;\n  // const { uid } = userAuth;\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapshot = await userRef.get();\n\n  if (!snapshot.exists) {\n    const { displayName, email } = userAuth;\n    const timestamp = new Date();\n    const userRoles = ['user'];\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdDate: timestamp,\n        userRoles,\n        ...additionalData\n      });\n    } catch(err) {\n      // console.log(err);\n    }\n  }\n\n  return userRef;\n};\n\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = auth.onAuthStateChanged(userAuth => {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject);\n  })\n}\n\n\n\n// import firebase from 'firebase/compat/app';\n// import 'firebase/compat/firestore';\n// import 'firebase/compat/auth';\n\n// const config = {\n//    apiKey: \"AIzaSyA-4HHVuPHukbJ7AsLCCiITyX_zLy0nBcA\",\n//   authDomain: \"foodstore-ffdf9.firebaseapp.com\",\n//   projectId: \"foodstore-ffdf9\",\n//   storageBucket: \"foodstore-ffdf9.appspot.com\",\n//   messagingSenderId: \"44192915194\",\n//   appId: \"1:44192915194:web:d7b01afb68e3faf3387343\",\n//   measurementId: \"G-BC5TF4FGX2\"\n// };\n \n// export const createUserProfileDocument = async (userAuth, additionalData) => {\n//    if (!userAuth) return;\n\n//    const userRef = firestore.doc(`users/${userAuth.uid}`);\n//    const snapShot = await userRef.get();\n   \n//    if (!snapShot.exists) {\n//       const { displayName, email } = userAuth;\n//       const createdAt = new Date();\n//       const userRoles = ['user']\n\n//       try {\n         \n//          await userRef.set({\n//             displayName,\n//             email,\n//             createdAt,\n//             userRoles,\n//             ...additionalData\n//          })\n//       } catch (error) {\n//          console.log('error creating user', error.message);\n//       }\n//    }\n\n//    return userRef;\n    \n// }\n// firebase.initializeApp(config);\n// export const auth = firebase.auth();\n// export const firestore = firebase.firestore();\n\n// const provider = new firebase.auth.GoogleAuthProvider();\n// provider.setCustomParameters({ prompt: 'select_account' });\n// export const signInWithGoogle = () => auth.signInWithPopup(provider);\n\n// export default firebase;"]},"metadata":{},"sourceType":"module"}