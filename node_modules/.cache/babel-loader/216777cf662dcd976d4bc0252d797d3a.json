{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { checkUserIsAdmin } from './../Utils';\n\nconst mapState = _ref => {\n  let {\n    user\n  } = _ref;\n  return {\n    currentUser: user.currentUser\n  };\n};\n\nconst useAdminAuth = props => {\n  _s();\n\n  const {\n    currentUser\n  } = useSelector(mapState);\n  const history = useHistory();\n  useEffect(() => {\n    if (!checkUserIsAdmin(currentUser)) {\n      history.push('/login');\n    }\n  }, [currentUser]);\n  return currentUser;\n};\n\n_s(useAdminAuth, \"J/33iK0/VbZ6jDe1sMa/N97vUzM=\", false, function () {\n  return [useSelector, useHistory];\n});\n\nexport default useAdminAuth;","map":{"version":3,"sources":["C:/Users/HP/OneDrive/Desktop/Task-2-Ecommerce/src/customHooks/useAdminAuth.js"],"names":["useEffect","useSelector","useHistory","checkUserIsAdmin","mapState","user","currentUser","useAdminAuth","props","history","push"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,gBAAT,QAAiC,YAAjC;;AAEA,MAAMC,QAAQ,GAAG;AAAA,MAAC;AAAEC,IAAAA;AAAF,GAAD;AAAA,SAAe;AAC9BC,IAAAA,WAAW,EAAED,IAAI,CAACC;AADY,GAAf;AAAA,CAAjB;;AAIA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAAA;;AAC5B,QAAM;AAAEF,IAAAA;AAAF,MAAkBL,WAAW,CAACG,QAAD,CAAnC;AACA,QAAMK,OAAO,GAAGP,UAAU,EAA1B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACG,gBAAgB,CAACG,WAAD,CAArB,EAAoC;AAClCG,MAAAA,OAAO,CAACC,IAAR,CAAa,QAAb;AACD;AAEF,GALQ,EAKN,CAACJ,WAAD,CALM,CAAT;AAOA,SAAOA,WAAP;AACD,CAZD;;GAAMC,Y;UACoBN,W,EACRC,U;;;AAYlB,eAAeK,YAAf","sourcesContent":["import { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { checkUserIsAdmin } from './../Utils';\n\nconst mapState = ({ user }) => ({\n  currentUser: user.currentUser\n});\n\nconst useAdminAuth = props => {\n  const { currentUser } = useSelector(mapState);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (!checkUserIsAdmin(currentUser)) {\n      history.push('/login');\n    }\n\n  }, [currentUser]);\n\n  return currentUser;\n}\n\nexport default useAdminAuth;"]},"metadata":{},"sourceType":"module"}