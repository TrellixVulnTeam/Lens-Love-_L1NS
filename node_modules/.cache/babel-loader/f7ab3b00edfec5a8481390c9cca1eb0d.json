{"ast":null,"code":"import ordersTypes from './orders.types';\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\nimport { handleSaveOrder, handleGetUserOrderHistory, handleGetAdminOrderHistory, handleGetOrder, handleFetchAdminOrder } from './orders.helpers';\nimport { auth } from './../../firebase/utils';\nimport { clearCart } from './../Cart/cart.actions';\nimport { setUserOrderHistory, setOrderDetails, setAdminOrder } from './orders.actions';\nimport { yellow } from '@material-ui/core/colors';\nimport productsTypes from '../Products/products.types';\nexport function* getAdminOrderHistory(_ref) {\n  let {\n    payload\n  } = _ref;\n\n  try {\n    const history = yield handleGetAdminOrderHistory(payload);\n    yield put(setUserOrderHistory(history));\n  } catch (err) {\n    console.log(err);\n  }\n}\nexport function* onGetAdminOrderHistoryStart() {\n  yield takeLatest(ordersTypes.GET_ADMIN_ORDER_HISTORY_START, getAdminOrderHistory);\n}\n;\nexport function* getUserOrderHistory(_ref2) {\n  let {\n    payload\n  } = _ref2;\n\n  try {\n    const history = yield handleGetUserOrderHistory(payload);\n    yield put(setUserOrderHistory(history));\n  } catch (err) {\n    console.log(err);\n  }\n}\nexport function* onGetUserOrderHistoryStart() {\n  yield takeLatest(ordersTypes.GET_USER_ORDER_HISTORY_START, getUserOrderHistory);\n}\n;\nexport function* saveOrder(_ref3) {\n  let {\n    payload\n  } = _ref3;\n\n  try {\n    const timestamps = new Date();\n    yield handleSaveOrder({ ...payload,\n      orderUserID: auth.currentUser.uid,\n      orderCreatedDate: timestamps\n    }); // yield put(\n    //   clearCart()\n    // )\n  } catch (err) {// console.log(err);\n  }\n}\n;\nexport function* onSaveOrderHistoryStart() {\n  yield takeLatest(ordersTypes.SAVE_ORDER_HISTORY_START, saveOrder);\n}\n;\nexport function* getOrderDetails(_ref4) {\n  let {\n    payload\n  } = _ref4;\n\n  try {\n    const order = yield handleGetOrder(payload);\n    console.log(order);\n    yield put(setOrderDetails(order));\n  } catch (err) {// console.log(err);\n  }\n}\nexport function* onGetOrderDetailsStart() {\n  yield takeLatest(ordersTypes.GET_ORDER_DETAILS_START, getOrderDetails);\n}\n;\nexport function* fetchAdminOrder() {\n  try {\n    const orders = yield handleFetchAdminOrder();\n    yield put(setAdminOrder(orders));\n  } catch (err) {// console.log(err)\n  }\n}\nexport function* onFetchOrderAdminStart() {\n  yield takeLatest(ordersTypes.FETCH_ORDER_ADMIN, fetchAdminOrder);\n}\nexport default function* ordersSagas() {\n  yield all([call(onSaveOrderHistoryStart), call(onGetAdminOrderHistoryStart), call(onGetUserOrderHistoryStart), call(onGetOrderDetailsStart), call(onFetchOrderAdminStart)]);\n}","map":{"version":3,"sources":["C:/Users/HP/OneDrive/Desktop/taskEcommerce/src/redux/Orders/orders.sagas.js"],"names":["ordersTypes","takeLatest","put","all","call","handleSaveOrder","handleGetUserOrderHistory","handleGetAdminOrderHistory","handleGetOrder","handleFetchAdminOrder","auth","clearCart","setUserOrderHistory","setOrderDetails","setAdminOrder","yellow","productsTypes","getAdminOrderHistory","payload","history","err","console","log","onGetAdminOrderHistoryStart","GET_ADMIN_ORDER_HISTORY_START","getUserOrderHistory","onGetUserOrderHistoryStart","GET_USER_ORDER_HISTORY_START","saveOrder","timestamps","Date","orderUserID","currentUser","uid","orderCreatedDate","onSaveOrderHistoryStart","SAVE_ORDER_HISTORY_START","getOrderDetails","order","onGetOrderDetailsStart","GET_ORDER_DETAILS_START","fetchAdminOrder","orders","onFetchOrderAdminStart","FETCH_ORDER_ADMIN","ordersSagas"],"mappings":"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","sourcesContent":["import ordersTypes from './orders.types';\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\nimport { handleSaveOrder, handleGetUserOrderHistory,handleGetAdminOrderHistory,\n  handleGetOrder,handleFetchAdminOrder } from './orders.helpers';\nimport { auth } from './../../firebase/utils';\nimport { clearCart } from './../Cart/cart.actions';\nimport { setUserOrderHistory, setOrderDetails,setAdminOrder } from './orders.actions';\nimport { yellow } from '@material-ui/core/colors';\nimport productsTypes from '../Products/products.types';\n\nexport function* getAdminOrderHistory({ payload }) {\n  try {\n    const history = yield handleGetAdminOrderHistory(payload);\n    yield put(\n      setUserOrderHistory(history)\n    );\n\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport function* onGetAdminOrderHistoryStart() {\n  yield takeLatest(ordersTypes.GET_ADMIN_ORDER_HISTORY_START, getAdminOrderHistory);\n};\n\n\n\n\n\n\n\n\nexport function* getUserOrderHistory({ payload }) {\n  try {\n    const history = yield handleGetUserOrderHistory(payload);\n    yield put(\n      setUserOrderHistory(history)\n    );\n\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport function* onGetUserOrderHistoryStart() {\n  yield takeLatest(ordersTypes.GET_USER_ORDER_HISTORY_START, getUserOrderHistory);\n};\n\nexport function* saveOrder({ payload }) {\n  try {\n    const timestamps = new Date();\n    yield handleSaveOrder({\n      ...payload,\n      orderUserID: auth.currentUser.uid,\n      orderCreatedDate: timestamps\n    });\n    // yield put(\n    //   clearCart()\n    // )\n\n  } catch (err) {\n    // console.log(err);\n  }\n};\n\nexport function* onSaveOrderHistoryStart() {\n  yield takeLatest(ordersTypes.SAVE_ORDER_HISTORY_START, saveOrder);\n};\n\nexport function* getOrderDetails({ payload }) {\n  try {\n    const order = yield handleGetOrder(payload);\n    console.log(order)\n    yield put(\n      setOrderDetails(order)\n    )\n\n  } catch (err) {\n    // console.log(err);\n  }\n}\n\nexport function* onGetOrderDetailsStart() {\n  yield takeLatest(ordersTypes.GET_ORDER_DETAILS_START, getOrderDetails);\n};\n\nexport function* fetchAdminOrder(){\n  try{\n\n    const orders = yield handleFetchAdminOrder();\n    yield put(\n      setAdminOrder(orders)\n    )\n\n  }catch(err){\n    // console.log(err)\n  }\n}\n\n\nexport function* onFetchOrderAdminStart(){\n  yield takeLatest(ordersTypes.FETCH_ORDER_ADMIN,fetchAdminOrder)\n}\n\nexport default function* ordersSagas() {\n  yield all([\n    call(onSaveOrderHistoryStart),\n    call(onGetAdminOrderHistoryStart),\n    call(onGetUserOrderHistoryStart),\n    call(onGetOrderDetailsStart),\n    call(onFetchOrderAdminStart)\n    \n  ])\n}\n"]},"metadata":{},"sourceType":"module"}