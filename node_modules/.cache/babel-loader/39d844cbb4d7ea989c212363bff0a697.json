{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Desktop\\\\Task-2-Ecommerce\\\\src\\\\components\\\\Signup\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, Link } from 'react-router-dom';\nimport { signUpUserStart } from './../../redux/User/user.actions';\nimport './styles.scss';\nimport AuthWrapper from './../AuthWrapper';\nimport FormInput from './../forms/FormInput';\nimport Button from './../forms/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapState = _ref => {\n  let {\n    user\n  } = _ref;\n  return {\n    currentUser: user.currentUser,\n    userErr: user.userErr\n  };\n};\n\nconst Signup = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const {\n    currentUser,\n    userErr\n  } = useSelector(mapState);\n  const [displayName, setDisplayName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [errors, setErrors] = useState([]);\n  useEffect(() => {\n    if (currentUser) {\n      reset();\n      history.push('/');\n    }\n  }, [currentUser]);\n  useEffect(() => {\n    if (Array.isArray(userErr) && userErr.length > 0) {\n      setErrors(userErr);\n    }\n  }, [userErr]);\n\n  const reset = () => {\n    setDisplayName('');\n    setEmail('');\n    setPassword('');\n    setConfirmPassword('');\n    setErrors([]);\n  };\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    dispatch(signUpUserStart({\n      displayName,\n      email,\n      password,\n      confirmPassword\n    }));\n  };\n\n  const configAuthWrapper = {\n    headline: 'Registration'\n  };\n  return /*#__PURE__*/_jsxDEV(AuthWrapper, { ...configAuthWrapper,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formWrap\",\n      children: [errors.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: errors.map((err, index) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: err\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleFormSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormInput, {\n          type: \"text\",\n          name: \"displayName\",\n          value: displayName,\n          placeholder: \"Full name\",\n          handleChange: e => setDisplayName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          type: \"email\",\n          name: \"email\",\n          value: email,\n          placeholder: \"Email\",\n          handleChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          type: \"password\",\n          name: \"password\",\n          value: password,\n          placeholder: \"Password\",\n          handleChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          type: \"password\",\n          name: \"confirmPassword\",\n          value: confirmPassword,\n          placeholder: \"Confirm Password\",\n          handleChange: e => setConfirmPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"links\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"LogIn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), ` | `, /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/recovery\",\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Signup, \"feC2znbBkwyk9WkL2Bt1sKkQ2Bk=\", false, function () {\n  return [useDispatch, useHistory, useSelector];\n});\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["C:/Users/HP/OneDrive/Desktop/Task-2-Ecommerce/src/components/Signup/index.js"],"names":["React","useState","useEffect","useDispatch","useSelector","useHistory","Link","signUpUserStart","AuthWrapper","FormInput","Button","mapState","user","currentUser","userErr","Signup","props","dispatch","history","displayName","setDisplayName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","errors","setErrors","reset","push","Array","isArray","length","handleFormSubmit","event","preventDefault","configAuthWrapper","headline","map","err","index","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, Link } from 'react-router-dom';\nimport { signUpUserStart } from './../../redux/User/user.actions';\nimport './styles.scss';\n\nimport AuthWrapper from './../AuthWrapper';\nimport FormInput from './../forms/FormInput';\nimport Button from './../forms/Button';\n\nconst mapState = ({ user }) => ({\n  currentUser: user.currentUser,\n  userErr: user.userErr\n});\n\nconst Signup = props => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { currentUser, userErr } = useSelector(mapState);\n  const [displayName, setDisplayName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [errors, setErrors] = useState([]);\n\n  useEffect(() => {\n    if (currentUser) {\n      reset();\n      history.push('/');\n    }\n\n  }, [currentUser]);\n\n  useEffect(() => {\n    if (Array.isArray(userErr) && userErr.length > 0) {\n      setErrors(userErr);\n    }\n\n  }, [userErr]);\n\n  const reset = () => {\n    setDisplayName('');\n    setEmail('');\n    setPassword('');\n    setConfirmPassword('');\n    setErrors([]);\n  };\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    dispatch(signUpUserStart({\n      displayName,\n      email,\n      password,\n      confirmPassword\n    }));\n  }\n\n  const configAuthWrapper = {\n    headline: 'Registration'\n  };\n\n  return (\n    <AuthWrapper {...configAuthWrapper}>\n      <div className=\"formWrap\">\n\n        {errors.length > 0 && (\n          <ul>\n            {errors.map((err, index) => {\n              return (\n                <li key={index}>\n                  {err}\n                </li>\n              );\n            })}\n          </ul>\n        )}\n\n        <form onSubmit={handleFormSubmit}>\n\n          <FormInput\n            type=\"text\"\n            name=\"displayName\"\n            value={displayName}\n            placeholder=\"Full name\"\n            handleChange={e => setDisplayName(e.target.value)}\n          />\n\n          <FormInput\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            placeholder=\"Email\"\n            handleChange={e => setEmail(e.target.value)}\n          />\n\n          <FormInput\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            placeholder=\"Password\"\n            handleChange={e => setPassword(e.target.value)}\n          />\n\n          <FormInput\n            type=\"password\"\n            name=\"confirmPassword\"\n            value={confirmPassword}\n            placeholder=\"Confirm Password\"\n            handleChange={e => setConfirmPassword(e.target.value)}\n          />\n\n          <Button type=\"submit\">\n            Register\n          </Button>\n        </form>\n\n        <div className=\"links\">\n          <Link to=\"/login\">\n            LogIn\n          </Link>\n          {` | `}\n          <Link to=\"/recovery\">\n            Reset Password\n            </Link>\n        </div>\n      </div>\n    </AuthWrapper>\n  );\n}\n\nexport default Signup;\n"]},"metadata":{},"sourceType":"module"}